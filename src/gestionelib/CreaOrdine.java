/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gestionelib;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;



/**
 *
 * @author salvatorenitopi
 */
public class CreaOrdine extends javax.swing.JFrame {

    /**
     * Creates new form RegistraDipendente
     */
    public CreaOrdine() {
        initComponents();
        Data_Field.setText (getData ());
        Ora_Field.setText (getOra ());
        Quantità_Field.setText ("1");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        First_Label = new javax.swing.JLabel();
        Codice_Label = new javax.swing.JLabel();
        Nome_Label = new javax.swing.JLabel();
        Quantà_Label = new javax.swing.JLabel();
        Data_Label = new javax.swing.JLabel();
        Iban_Label = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Data_Field = new javax.swing.JTextField();
        Quantità_Field = new javax.swing.JTextField();
        Nome_Field = new javax.swing.JTextField();
        Codice_Field = new javax.swing.JTextField();
        Ora_Field = new javax.swing.JTextField();
        Iban_Field = new javax.swing.JTextField();
        Annulla_Button = new javax.swing.JToggleButton();
        Registra_Button = new javax.swing.JButton();
        Ora_Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        First_Label.setText("Crea nuovo ordine");

        Codice_Label.setText("Codice Articolo");

        Nome_Label.setText("Nome Articolo");

        Quantà_Label.setText("Quantità");

        Data_Label.setText("Data");

        Iban_Label.setText("Iban");

        Codice_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Codice_FieldActionPerformed(evt);
            }
        });

        Ora_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ora_FieldActionPerformed(evt);
            }
        });

        Iban_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Iban_FieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Codice_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
            .addComponent(Nome_Field)
            .addComponent(Quantità_Field)
            .addComponent(Data_Field)
            .addComponent(Ora_Field)
            .addComponent(Iban_Field)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(Codice_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Nome_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Quantità_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Data_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Ora_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Iban_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        Annulla_Button.setText("Annulla");
        Annulla_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Annulla_ButtonActionPerformed(evt);
            }
        });

        Registra_Button.setText("Registra");
        Registra_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Registra_ButtonActionPerformed(evt);
            }
        });

        Ora_Label.setText("Ora");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Annulla_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Registra_Button))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(First_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Data_Label)
                                            .addComponent(Quantà_Label)
                                            .addComponent(Nome_Label)
                                            .addComponent(Codice_Label))
                                        .addComponent(Iban_Label, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(Ora_Label, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(First_Label)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(Codice_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Nome_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Quantà_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Data_Label)
                        .addGap(17, 17, 17)
                        .addComponent(Ora_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Iban_Label))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Annulla_Button)
                    .addComponent(Registra_Button)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Codice_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Codice_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Codice_FieldActionPerformed

    private void Registra_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Registra_ButtonActionPerformed
        registra ();
    }//GEN-LAST:event_Registra_ButtonActionPerformed

    private void Annulla_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Annulla_ButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_Annulla_ButtonActionPerformed

    private void Ora_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ora_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Ora_FieldActionPerformed

    private void Iban_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Iban_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Iban_FieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreaOrdine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreaOrdine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreaOrdine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreaOrdine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreaOrdine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Annulla_Button;
    private javax.swing.JTextField Codice_Field;
    private javax.swing.JLabel Codice_Label;
    private javax.swing.JTextField Data_Field;
    private javax.swing.JLabel Data_Label;
    private javax.swing.JLabel First_Label;
    private javax.swing.JTextField Iban_Field;
    private javax.swing.JLabel Iban_Label;
    private javax.swing.JTextField Nome_Field;
    private javax.swing.JLabel Nome_Label;
    private javax.swing.JTextField Ora_Field;
    private javax.swing.JLabel Ora_Label;
    private javax.swing.JTextField Quantità_Field;
    private javax.swing.JLabel Quantà_Label;
    private javax.swing.JButton Registra_Button;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables


   public int verificaInfo (){
        
        int status = 1;
        
        
        
        if (Nome_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo cognome non può essere vuoto.");
            status = -1;
        }
        
        if (Quantità_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo email non può essere vuoto.");
            status = -1;
        }
        
        if (Ora_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo indirizzo non può essere vuoto.");
            status = -1;
        }
        
        if (Iban_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo indirizzo non può essere vuoto.");
            status = -1;
        }
        
        
        
        
        
        
        try{
                         Integer.parseInt(Codice_Field.getText());
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null,"Il campo codice non può essere vuoto e può contenere solo numeri.");
                        status = -1;
                    }
        
        try{
                         Integer.parseInt(Quantità_Field.getText());
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null,"Il campo quantità non può essere vuoto e può contenere solo numeri.");
                        status = -1;
                    }
        
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/Libreria?" + "user=root&password=");
            Statement stmt;
            //PreparedStatement pstmt;
            ResultSet rs;
            
            stmt = conn.createStatement();


            // recupero i dati
            rs = stmt.executeQuery("SELECT * FROM Ordini WHERE cod_art='"+Codice_Field.getText()+"' ");


            while(rs.next())
            {
                status = -1;
                
                if (Codice_Field.getText().equals(rs.getString("cod_art"))){
                    JOptionPane.showMessageDialog(null,"Codice articolo esistente");
                 }
                
            }

			//pstmt.close(); // rilascio le risorse
			stmt.close(); // rilascio le risorse
            conn.close(); // termino la connessione
        }
        catch(ClassNotFoundException e)
        {
            System.out.println(e);
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }

    
                    
        System.out.println(status);           
        return status;
    
    }
    
    
    public void registra (){
        
        
        int stato = verificaInfo ();
        if (stato == 1) {
            
                try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/Libreria?" + "user=root&password=");
                //Statement stmt;
                PreparedStatement pstmt;
                //ResultSet rs;


                // inserisco i record
                pstmt = conn.prepareStatement("INSERT INTO Ordini " +
                        "(cod_art, nome_art, quantità, data, ora, iban) values (?,?,?,?,?,?)");

                pstmt.setString(1, Codice_Field.getText());
                pstmt.setString(2, Nome_Field.getText());
                pstmt.setString(3, Quantità_Field.getText());
                pstmt.setString(4, Data_Field.getText());
                pstmt.setString(5, Ora_Field.getText());
                pstmt.setString(6, Iban_Field.getText());

               
                pstmt.execute();


                            pstmt.close(); // rilascio le risorse
                            //stmt.close(); // rilascio le risorse
                conn.close(); // termino la connessione
            }
            catch(ClassNotFoundException e)
            {
                System.out.println(e);
            }
            catch(SQLException e)
            {
                System.out.println(e);
            }
            
                
               JOptionPane.showMessageDialog(null,"Ordine Registrato");
               this.setVisible(false);
    
        }
        
        else
        {
            JOptionPane.showMessageDialog(null,"Impossibile completare la registrazione");
        }
        
    }
    
    
    String getData (){
        String data = null;
        
         GregorianCalendar gc = new GregorianCalendar();
        
        int giorno = gc.get(Calendar.DATE);
        int mese = gc.get(Calendar.MONTH) + 1;
        int anno = gc.get(Calendar.YEAR);
        
        int ore = gc.get(Calendar.HOUR);
        int min = gc.get(Calendar.MINUTE);
        int sec = gc.get(Calendar.SECOND);

        
        data = giorno+"/"+mese+"/"+anno;
        
        return data;
    }
    
    String getOra (){
        String ora = null;
        
         GregorianCalendar gc = new GregorianCalendar();

        
        int ore = gc.get(Calendar.HOUR);
        int min = gc.get(Calendar.MINUTE);
        int sec = gc.get(Calendar.SECOND);

        
        ora = ore+":"+min+":"+sec;
        
        return ora;
    }
    
   

}
