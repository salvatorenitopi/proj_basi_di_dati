/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gestionelib;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;



/**
 *
 * @author salvatorenitopi
 */
public class RegistraDipendente extends javax.swing.JFrame {

    /**
     * Creates new form RegistraDipendente
     */
    public RegistraDipendente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        First_Label = new javax.swing.JLabel();
        Nome_Label = new javax.swing.JLabel();
        Cognome_Label = new javax.swing.JLabel();
        Telefono_Label = new javax.swing.JLabel();
        Email_Label = new javax.swing.JLabel();
        Indirizzo_Label = new javax.swing.JLabel();
        Username_Label = new javax.swing.JLabel();
        Password_Label = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Email_Field = new javax.swing.JTextField();
        Telefono_Field = new javax.swing.JTextField();
        Cognome_Field = new javax.swing.JTextField();
        Nome_Field = new javax.swing.JTextField();
        Indirizzo_Field = new javax.swing.JTextField();
        Username_Field = new javax.swing.JTextField();
        Password_Field = new javax.swing.JPasswordField();
        RipetiPsw_Field = new javax.swing.JPasswordField();
        Annulla_Button = new javax.swing.JToggleButton();
        Registra_Button = new javax.swing.JButton();
        Ripeti_Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        First_Label.setText("Registra nuovo dipendente");

        Nome_Label.setText("Nome");

        Cognome_Label.setText("Cognome");

        Telefono_Label.setText("Telefono");

        Email_Label.setText("E-Mail");

        Indirizzo_Label.setText("Indirizzo");

        Username_Label.setText("USERNAME");

        Password_Label.setText("PASSWORD");

        Nome_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nome_FieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Nome_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
            .addComponent(Cognome_Field)
            .addComponent(Telefono_Field)
            .addComponent(Email_Field)
            .addComponent(Indirizzo_Field)
            .addComponent(Username_Field)
            .addComponent(Password_Field)
            .addComponent(RipetiPsw_Field)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(Nome_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Cognome_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Telefono_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Email_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Indirizzo_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(Username_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Password_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RipetiPsw_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Annulla_Button.setText("Annulla");
        Annulla_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Annulla_ButtonActionPerformed(evt);
            }
        });

        Registra_Button.setText("Registra");
        Registra_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Registra_ButtonActionPerformed(evt);
            }
        });

        Ripeti_Label.setText("RIPETI PSW");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Annulla_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Registra_Button))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(First_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Email_Label)
                                        .addComponent(Username_Label)
                                        .addComponent(Indirizzo_Label)
                                        .addComponent(Telefono_Label)
                                        .addComponent(Cognome_Label)
                                        .addComponent(Nome_Label)
                                        .addComponent(Password_Label))
                                    .addComponent(Ripeti_Label, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(First_Label)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(Nome_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Cognome_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Telefono_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Email_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Indirizzo_Label)
                        .addGap(50, 50, 50)
                        .addComponent(Username_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Password_Label)
                        .addGap(18, 18, 18)
                        .addComponent(Ripeti_Label)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Annulla_Button)
                    .addComponent(Registra_Button)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Nome_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nome_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nome_FieldActionPerformed

    private void Registra_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Registra_ButtonActionPerformed
        registra ();
    }//GEN-LAST:event_Registra_ButtonActionPerformed

    private void Annulla_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Annulla_ButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_Annulla_ButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistraDipendente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistraDipendente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistraDipendente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistraDipendente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistraDipendente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Annulla_Button;
    private javax.swing.JTextField Cognome_Field;
    private javax.swing.JLabel Cognome_Label;
    private javax.swing.JTextField Email_Field;
    private javax.swing.JLabel Email_Label;
    private javax.swing.JLabel First_Label;
    private javax.swing.JTextField Indirizzo_Field;
    private javax.swing.JLabel Indirizzo_Label;
    private javax.swing.JTextField Nome_Field;
    private javax.swing.JLabel Nome_Label;
    private javax.swing.JPasswordField Password_Field;
    private javax.swing.JLabel Password_Label;
    private javax.swing.JButton Registra_Button;
    private javax.swing.JPasswordField RipetiPsw_Field;
    private javax.swing.JLabel Ripeti_Label;
    private javax.swing.JTextField Telefono_Field;
    private javax.swing.JLabel Telefono_Label;
    private javax.swing.JTextField Username_Field;
    private javax.swing.JLabel Username_Label;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables


    public int verificaInfo (){
        
        int status = 1;
        
        
        if (Nome_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo nome non può essere vuoto.");
            status = -1;
        }
        
        
        if (Cognome_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo cognome non può essere vuoto.");
            status = -1;
        }
        
        if (Email_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo email non può essere vuoto.");
            status = -1;
        }
        
        if (Indirizzo_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo indirizzo non può essere vuoto.");
            status = -1;
        }
        
        if (Username_Field.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Il campo username non può essere vuoto.");
            status = -1;
        }
        
        
        String psw = new String(Password_Field.getPassword());
        
        if (psw.equals(null)){
            JOptionPane.showMessageDialog(null,"Il campo password non può essere vuoto.");
            status = -1;
        }
        
        String psw2 = new String(Password_Field.getPassword());
        
        if (psw2.equals(null)){
            JOptionPane.showMessageDialog(null,"Il campo ripeti password non può essere vuoto.");
            status = -1;
        }
        
        
        try{
                         Integer.parseInt(Telefono_Field.getText());
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null,"Il campo telefono non può essere vuoto e può contenere solo numeri.");
                        status = -1;
                    }
        
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/Libreria?" + "user=root&password=");
            Statement stmt;
            //PreparedStatement pstmt;
            ResultSet rs;
            
            stmt = conn.createStatement();


            // recupero i dati
            rs = stmt.executeQuery("SELECT * FROM Utenti WHERE username='"+Username_Field.getText()+"' ");


            while(rs.next())
            {
                status = -1;
                
                if (Username_Field.getText().equals(rs.getString("username"))){
                    JOptionPane.showMessageDialog(null,"Username esistente");
                 }
                
            }

			//pstmt.close(); // rilascio le risorse
			stmt.close(); // rilascio le risorse
            conn.close(); // termino la connessione
        }
        catch(ClassNotFoundException e)
        {
            System.out.println(e);
        }
        catch(SQLException e)
        {
            System.out.println(e);
        }

        
        
        psw = new String(RipetiPsw_Field.getPassword());
        psw2 = new String(Password_Field.getPassword());
        
        if (!psw.equals(psw2)){
                    JOptionPane.showMessageDialog(null,"La password non coincide");
                    status = -1;
                 }
                    
        System.out.println(status);           
        return status;
    
    }
    
    
    public void registra (){
        
        
        int stato = verificaInfo ();
        if (stato == 1) {
            
                try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/Libreria?" + "user=root&password=");
                //Statement stmt;
                PreparedStatement pstmt;
                //ResultSet rs;


                // inserisco i record
                pstmt = conn.prepareStatement("INSERT INTO Utenti " +
                        "(nome, cognome, rights, telefono, email, indirizzo, username, password, notifiche) values (?,?,?,?,?,?,?,?,?)");

                pstmt.setString(1, Nome_Field.getText());
                pstmt.setString(2, Cognome_Field.getText());
                pstmt.setString(3, "1");
                pstmt.setString(4, Telefono_Field.getText());
                pstmt.setString(5, Email_Field.getText());
                pstmt.setString(6, Indirizzo_Field.getText());
                pstmt.setString(7, Username_Field.getText());
                    String psw = new String(Password_Field.getPassword());
                pstmt.setString(8, psw);
                pstmt.setString(9, "1");
                pstmt.execute();


                            pstmt.close(); // rilascio le risorse
                            //stmt.close(); // rilascio le risorse
                conn.close(); // termino la connessione
            }
            catch(ClassNotFoundException e)
            {
                System.out.println(e);
            }
            catch(SQLException e)
            {
                System.out.println(e);
            }
            
                
               JOptionPane.showMessageDialog(null,"Dipendente Registrato");
               this.setVisible(false);
    
        }
        
        else
        {
            JOptionPane.showMessageDialog(null,"Impossibile completare la registrazione");
        }
        
    }

}
